PORTED FUNCs LIST (220 of 220):

 Mat getMeans()
 Mat getWeights()
static Ptr_EM create()
static Ptr_EM load(String filepath, String nodeName = String())
 TermCriteria getTermCriteria()
 Vec2d predict2(Mat sample, Mat& probs)
 bool trainE(Mat samples, Mat means0, Mat covs0 = Mat(), Mat weights0 = Mat(), Mat& logLikelihoods = Mat(), Mat& labels = Mat(), Mat& probs = Mat())
 bool trainEM(Mat samples, Mat& logLikelihoods = Mat(), Mat& labels = Mat(), Mat& probs = Mat())
 bool trainM(Mat samples, Mat probs0, Mat& logLikelihoods = Mat(), Mat& labels = Mat(), Mat& probs = Mat())
 float predict(Mat samples, Mat& results = Mat(), int flags = 0)
 int getClustersNumber()
 int getCovarianceMatrixType()
 void getCovs(vector_Mat& covs)
 void setClustersNumber(int val)
 void setCovarianceMatrixType(int val)
 void setTermCriteria(TermCriteria val)
 Mat getClassWeights()
 Mat getSupportVectors()
 Mat getUncompressedSupportVectors()
static Ptr_ParamGrid getDefaultGridPtr(int param_id)
static Ptr_SVM create()
static Ptr_SVM load(String filepath)
 TermCriteria getTermCriteria()
 bool trainAuto(Mat samples, int layout, Mat responses, int kFold = 10, Ptr_ParamGrid Cgrid = SVM::getDefaultGridPtr(SVM::C), Ptr_ParamGrid gammaGrid = SVM::getDefaultGridPtr(SVM::GAMMA), Ptr_ParamGrid pGrid = SVM::getDefaultGridPtr(SVM::P), Ptr_ParamGrid nuGrid = SVM::getDefaultGridPtr(SVM::NU), Ptr_ParamGrid coeffGrid = SVM::getDefaultGridPtr(SVM::COEF), Ptr_ParamGrid degreeGrid = SVM::getDefaultGridPtr(SVM::DEGREE), bool balanced = false)
 double getC()
 double getCoef0()
 double getDecisionFunction(int i, Mat& alpha, Mat& svidx)
 double getDegree()
 double getGamma()
 double getNu()
 double getP()
 int getKernelType()
 int getType()
 void setC(double val)
 void setClassWeights(Mat val)
 void setCoef0(double val)
 void setDegree(double val)
 void setGamma(double val)
 void setKernel(int kernelType)
 void setNu(double val)
 void setP(double val)
 void setTermCriteria(TermCriteria val)
 void setType(int val)
static Ptr_NormalBayesClassifier create()
static Ptr_NormalBayesClassifier load(String filepath, String nodeName = String())
 float predictProb(Mat inputs, Mat& outputs, Mat& outputProbs, int flags = 0)
 Mat getCatMap()
 Mat getCatOfs()
 Mat getClassLabels()
 Mat getDefaultSubstValues()
 Mat getMissing()
 Mat getNormCatResponses()
 Mat getResponses()
 Mat getSampleWeights()
 Mat getSamples()
static Mat getSubVector(Mat vec, Mat idx)
 Mat getTestNormCatResponses()
 Mat getTestResponses()
 Mat getTestSampleIdx()
 Mat getTestSampleWeights()
 Mat getTestSamples()
 Mat getTrainNormCatResponses()
 Mat getTrainResponses()
 Mat getTrainSampleIdx()
 Mat getTrainSampleWeights()
 Mat getTrainSamples(int layout = ROW_SAMPLE, bool compressSamples = true, bool compressVars = true)
 Mat getVarIdx()
 Mat getVarSymbolFlags()
 Mat getVarType()
static Ptr_TrainData create(Mat samples, int layout, Mat responses, Mat varIdx = Mat(), Mat sampleIdx = Mat(), Mat sampleWeights = Mat(), Mat varType = Mat())
 int getCatCount(int vi)
 int getLayout()
 int getNAllVars()
 int getNSamples()
 int getNTestSamples()
 int getNTrainSamples()
 int getNVars()
 int getResponseType()
 void getNames(vector_String names)
 void getSample(Mat varIdx, int sidx, float* buf)
 void getValues(int vi, Mat sidx, float* values)
 void setTrainTestSplit(int count, bool shuffle = true)
 void setTrainTestSplitRatio(double ratio, bool shuffle = true)
 void shuffleTrainTest()
static Ptr_Boost create()
static Ptr_Boost load(String filepath, String nodeName = String())
 double getWeightTrimRate()
 int getBoostType()
 int getWeakCount()
 void setBoostType(int val)
 void setWeakCount(int val)
 void setWeightTrimRate(double val)
 Mat get_learnt_thetas()
static Ptr_LogisticRegression create()
static Ptr_LogisticRegression load(String filepath, String nodeName = String())
 TermCriteria getTermCriteria()
 double getLearningRate()
 float predict(Mat samples, Mat& results = Mat(), int flags = 0)
 int getIterations()
 int getMiniBatchSize()
 int getRegularization()
 int getTrainMethod()
 void setIterations(int val)
 void setLearningRate(double val)
 void setMiniBatchSize(int val)
 void setRegularization(int val)
 void setTermCriteria(TermCriteria val)
 void setTrainMethod(int val)
static Ptr_ParamGrid create(double minVal = 0., double maxVal = 0., double logstep = 1.)
double ParamGrid::minVal
void ParamGrid::minVal
double ParamGrid::maxVal
void ParamGrid::maxVal
double ParamGrid::logStep
void ParamGrid::logStep
static Ptr_KNearest create()
 bool getIsClassifier()
 float findNearest(Mat samples, int k, Mat& results, Mat& neighborResponses = Mat(), Mat& dist = Mat())
 int getAlgorithmType()
 int getDefaultK()
 int getEmax()
 void setAlgorithmType(int val)
 void setDefaultK(int val)
 void setEmax(int val)
 void setIsClassifier(bool val)
 Mat getWeights()
static Ptr_SVMSGD create()
static Ptr_SVMSGD load(String filepath, String nodeName = String())
 TermCriteria getTermCriteria()
 float getInitialStepSize()
 float getMarginRegularization()
 float getShift()
 float getStepDecreasingPower()
 int getMarginType()
 int getSvmsgdType()
 void setInitialStepSize(float InitialStepSize)
 void setMarginRegularization(float marginRegularization)
 void setMarginType(int marginType)
 void setOptimalParameters(int svmsgdType = SVMSGD::ASGD, int marginType = SVMSGD::SOFT_MARGIN)
 void setStepDecreasingPower(float stepDecreasingPower)
 void setSvmsgdType(int svmsgdType)
 void setTermCriteria(TermCriteria val)
 Mat getPriors()
static Ptr_DTrees create()
static Ptr_DTrees load(String filepath, String nodeName = String())
 bool getTruncatePrunedTree()
 bool getUse1SERule()
 bool getUseSurrogates()
 float getRegressionAccuracy()
 int getCVFolds()
 int getMaxCategories()
 int getMaxDepth()
 int getMinSampleCount()
 void setCVFolds(int val)
 void setMaxCategories(int val)
 void setMaxDepth(int val)
 void setMinSampleCount(int val)
 void setPriors(Mat val)
 void setRegressionAccuracy(float val)
 void setTruncatePrunedTree(bool val)
 void setUse1SERule(bool val)
 void setUseSurrogates(bool val)
 Mat getLayerSizes()
 Mat getWeights(int layerIdx)
static Ptr_ANN_MLP create()
static Ptr_ANN_MLP load(String filepath)
 TermCriteria getTermCriteria()
 double getAnnealCoolingRatio()
 double getAnnealFinalT()
 double getAnnealInitialT()
 double getBackpropMomentumScale()
 double getBackpropWeightScale()
 double getRpropDW0()
 double getRpropDWMax()
 double getRpropDWMin()
 double getRpropDWMinus()
 double getRpropDWPlus()
 int getAnnealItePerStep()
 int getTrainMethod()
 void setActivationFunction(int type, double param1 = 0, double param2 = 0)
 void setAnnealCoolingRatio(double val)
 void setAnnealFinalT(double val)
 void setAnnealInitialT(double val)
 void setAnnealItePerStep(int val)
 void setBackpropMomentumScale(double val)
 void setBackpropWeightScale(double val)
 void setLayerSizes(Mat _layer_sizes)
 void setRpropDW0(double val)
 void setRpropDWMax(double val)
 void setRpropDWMin(double val)
 void setRpropDWMinus(double val)
 void setRpropDWPlus(double val)
 void setTermCriteria(TermCriteria val)
 void setTrainMethod(int method, double param1 = 0, double param2 = 0)
 double getAnnealCoolingRatio()
 double getAnnealFinalT()
 double getAnnealInitialT()
 int getAnnealItePerStep()
 void setAnnealCoolingRatio(double val)
 void setAnnealFinalT(double val)
 void setAnnealInitialT(double val)
 void setAnnealItePerStep(int val)
 bool empty()
 bool isClassifier()
 bool isTrained()
 bool train(Mat samples, int layout, Mat responses)
 bool train(Ptr_TrainData trainData, int flags = 0)
 float calcError(Ptr_TrainData data, bool test, Mat& resp)
 float predict(Mat samples, Mat& results = Mat(), int flags = 0)
 int getVarCount()
 Mat getVarImportance()
static Ptr_RTrees create()
static Ptr_RTrees load(String filepath, String nodeName = String())
 TermCriteria getTermCriteria()
 bool getCalculateVarImportance()
 int getActiveVarCount()
 void getVotes(Mat samples, Mat& results, int flags)
 void setActiveVarCount(int val)
 void setCalculateVarImportance(bool val)
 void setTermCriteria(TermCriteria val)

SKIPPED FUNCs LIST (0 of 220):


0 def args - 189 funcs
1 def args - 11 funcs
2 def args - 7 funcs
3 def args - 4 funcs
4 def args - 1 funcs
5 def args - 1 funcs
8 def args - 1 funcs